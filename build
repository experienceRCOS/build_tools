#!/bin/bash

cd ..

export USE_CCACHE=1

# Define functions
function build_rom {
	. build/envsetup.sh
	lunch aosp_$1-userdebug
	make otapackage
}

function build_boot {
	. build/envsetup.sh
	lunch aosp_$1-userdebug
	make bootimage
}

function build_recovery {
	. build/envsetup.sh
	lunch aosp_$1-userdebug
	make recoveryimage
}

# Check 1st option
case "$1" in
	kylepro )
		DEVICE=$1
		FAST=1
		;;
	kyleprods )
		DEVICE=$1
		FAST=1
		;;
	trendplus )
		BOTH=1
		DEVICE='kylepro kyleprods'
		FAST=1
		;;
	"" )
		;;
	* )
		echo Unknown 1st option: $1
		exit 0
		;;
esac

# If 1st option used, check 2nd option
if [[ $FAST ]]; then
	case "$2" in
		-b|--make-boot )
			BOOT=1
			MORE=1
			;;
		-r|--make-recovery )
			RECOVERY=1
			MORE=1
			;;
		-c|--make-clean )
			CLEAN=1
			;;
		"" )
			;;
		* )
			echo Unknown 2nd option: $2
			exit 0
	esac
fi

# Fast building if options used
if [[ $FAST && !($MORE) ]]; then

	# Clean if needed
	if [[ $CLEAN ]]; then
		make clean
	fi

	# Build for only device
	if [[ !($BOTH) ]]; then
		build_rom $DEVICE

	# Build for both devices
	else
		for DNAME in $DEVICE; do
			build_rom $DNAME
		done
	fi

# Make boot image
elif [[ $BOOT ]]; then

	# Make it for only device
	if [[ !($BOTH) ]]; then
		build_boot $DEVICE

	# Make it for both devices
	else
		for DNAME in $DEVICE; do
			build_boot $DNAME
		done
	fi

# Make recovery image
elif [[ $RECOVERY ]]; then

	# Make it for only device
	if [[ !($BOTH) ]]; then
		build_recovery $DEVICE

	# Make it for both devices
	else
		for DNAME in $DEVICE; do
			build_recovery $DNAME
		done
	fi
fi

# Normal building if no options used
if [[ !($FAST) ]]; then
	echo -n 'Make it clean? (y/N): '
	read CLEAN
	# Clean if needed
	if [[ $CLEAN ]]; then
		make clean
	fi

	echo -n 'Device? (kylepro or kyleprods): '
	read DEVICE
	# Check if given proper device DNAME
	if [[ $DEVICE != kylepro && $DEVICE != kyleprods ]]; then
		echo Unknown device DNAME: $DEVICE
		exit 0
	fi

	build_rom
fi
